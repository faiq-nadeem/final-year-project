{"ast":null,"code":"import { FETCH_ALL_BLOGS, CREATE_BLOG, UPDATE_BLOG, DELETE_BLOG } from '../constants/actionTypes';\nimport * as api from '../api';\nimport { loaderStatus } from '../src/actions/loader'; // Action Creators\n\nexport const getBlogs = () => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.fetchBlogs();\n    dispatch({\n      type: FETCH_ALL_BLOGS,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const createBlog = blog => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.createBlog(blog);\n    dispatch({\n      type: CREATE_BLOG,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const updateBlog = (id, blog) => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.updatedBlog(id, blog);\n    dispatch({\n      type: UPDATE_BLOG,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const deleteBlog = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    await api.deleteBlog(id);\n    dispatch({\n      type: DELETE_BLOG,\n      payload: id\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const likeBlog = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.likeBlog(id);\n    dispatch({\n      type: UPDATE_BLOG,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeBlogStatus = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeBlogStatus(id);\n    dispatch({\n      type: UPDATE_BLOG,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};","map":{"version":3,"sources":["C:/xampp/htdocs/aaa/admin/src/actions/blogs.js"],"names":["FETCH_ALL_BLOGS","CREATE_BLOG","UPDATE_BLOG","DELETE_BLOG","api","loaderStatus","getBlogs","dispatch","data","fetchBlogs","type","payload","error","console","log","createBlog","blog","updateBlog","id","updatedBlog","deleteBlog","likeBlog","changeBlogStatus"],"mappings":"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","sourcesContent":["import { FETCH_ALL_BLOGS, CREATE_BLOG, UPDATE_BLOG, DELETE_BLOG } from '../constants/actionTypes'\r\nimport * as api from '../api'\r\nimport {loaderStatus} from '../src/actions/loader'\r\n\r\n// Action Creators\r\nexport const getBlogs = () => async(dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.fetchBlogs()\r\n        dispatch({\r\n            type   : FETCH_ALL_BLOGS,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const createBlog = (blog) => async(dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.createBlog(blog)\r\n        dispatch({\r\n            type   : CREATE_BLOG,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const updateBlog = (id, blog) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.updatedBlog(id, blog)\r\n        dispatch({\r\n            type   : UPDATE_BLOG,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const deleteBlog = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        await api.deleteBlog(id)\r\n        dispatch({\r\n            type   : DELETE_BLOG,\r\n            payload: id\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const likeBlog = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.likeBlog(id)\r\n\r\n        dispatch({\r\n            type   : UPDATE_BLOG,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeBlogStatus = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeBlogStatus(id)\r\n        dispatch({\r\n            type   : UPDATE_BLOG,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}