{"ast":null,"code":"import { FETCH_ALL_SUBCATEGORIES, CREATE_SUBCATEGORY, UPDATE_SUBCATEGORY, DELETE_SUBCATEGORY } from '../constants/actionTypes';\nimport * as api from '../api';\nimport { loaderStatus } from './loader'; // Action Creators\n\nexport const getSubCategories = () => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.fetchSubCategories();\n    dispatch({\n      type: FETCH_ALL_SUBCATEGORIES,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const createSubCategory = subCategory => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.createSubCategory(subCategory);\n    dispatch({\n      type: CREATE_SUBCATEGORY,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const updateSubCategory = (id, subCategory) => async dispatch => {\n  try {\n    alert(JSON.stringify(subCategory));\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.updatedSubCategory(id, subCategory);\n    dispatch({\n      type: UPDATE_SUBCATEGORY,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const deleteSubCategory = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    await api.deleteSubCategory(id);\n    dispatch({\n      type: DELETE_SUBCATEGORY,\n      payload: id\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const likeSubCategory = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.likeSubCategory(id);\n    dispatch({\n      type: UPDATE_SUBCATEGORY,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeSubCategoryStatus = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeSubCategoryStatus(id);\n    dispatch({\n      type: UPDATE_SUBCATEGORY,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};","map":{"version":3,"sources":["C:/xampp/htdocs/aaa/admin/src/actions/subCategories.js"],"names":["FETCH_ALL_SUBCATEGORIES","CREATE_SUBCATEGORY","UPDATE_SUBCATEGORY","DELETE_SUBCATEGORY","api","loaderStatus","getSubCategories","dispatch","data","fetchSubCategories","type","payload","error","console","log","createSubCategory","subCategory","updateSubCategory","id","alert","JSON","stringify","updatedSubCategory","deleteSubCategory","likeSubCategory","changeSubCategoryStatus"],"mappings":"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","sourcesContent":["import { FETCH_ALL_SUBCATEGORIES, CREATE_SUBCATEGORY, UPDATE_SUBCATEGORY, DELETE_SUBCATEGORY } from '../constants/actionTypes'\r\nimport * as api from '../api'\r\nimport { loaderStatus } from './loader'\r\n\r\n// Action Creators\r\nexport const getSubCategories = () => async(dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.fetchSubCategories()\r\n        dispatch({\r\n            type   : FETCH_ALL_SUBCATEGORIES,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const createSubCategory = (subCategory) => async(dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.createSubCategory(subCategory)\r\n        dispatch({\r\n            type   : CREATE_SUBCATEGORY,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const updateSubCategory = (id, subCategory) => async (dispatch) => {\r\n    try {\r\n        alert(JSON.stringify(subCategory))\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.updatedSubCategory(id, subCategory)\r\n        dispatch({\r\n            type   : UPDATE_SUBCATEGORY,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const deleteSubCategory = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        await api.deleteSubCategory(id)\r\n        dispatch({\r\n            type   : DELETE_SUBCATEGORY,\r\n            payload: id\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const likeSubCategory = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.likeSubCategory(id)\r\n\r\n        dispatch({\r\n            type   : UPDATE_SUBCATEGORY,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeSubCategoryStatus = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeSubCategoryStatus(id)\r\n        dispatch({\r\n            type   : UPDATE_SUBCATEGORY,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}