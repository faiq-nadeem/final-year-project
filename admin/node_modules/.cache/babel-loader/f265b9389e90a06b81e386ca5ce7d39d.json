{"ast":null,"code":"import { FETCH_ALL, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api'; // Action Creators\n\nexport const getUsers = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchUsers();\n    alert(JSON.stringify({\n      data\n    }));\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateUser = (id, user) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatedUser(id, user);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteUser = id => async dispatch => {\n  try {\n    await api.deleteUser(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const changeUserStatus = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.changeUserStatus(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/xampp/htdocs/aaa/admin/src/actions/users.js"],"names":["FETCH_ALL","UPDATE","DELETE","api","getUsers","dispatch","data","fetchUsers","alert","JSON","stringify","type","payload","error","console","log","updateUser","id","user","updatedUser","deleteUser","changeUserStatus"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,0BAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAC7C,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACI,UAAJ,EAArB;AACAC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAe;AAACJ,MAAAA;AAAD,KAAf,CAAD,CAAL;AACAD,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAKX,SADJ;AAELY,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOO,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc,MAAOb,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACgB,WAAJ,CAAgBF,EAAhB,EAAoBC,IAApB,CAArB;AACAb,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAKV,MADJ;AAELW,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GAND,CAME,OAAOO,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAVM;AAYP,OAAO,MAAMO,UAAU,GAAIH,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAClD,MAAI;AACA,UAAMF,GAAG,CAACiB,UAAJ,CAAeH,EAAf,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAKT,MADJ;AAELU,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH,GAND,CAME,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAVM;AAYP,OAAO,MAAMQ,gBAAgB,GAAIJ,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACkB,gBAAJ,CAAqBJ,EAArB,CAArB;AAEAZ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAKV,MADJ;AAELW,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOO,KAAP,EAAc,CAEf;AACJ,CAXM","sourcesContent":["import { FETCH_ALL, UPDATE, DELETE } from '../constants/actionTypes'\r\nimport * as api from '../api'\r\n\r\n// Action Creators\r\nexport const getUsers = () => async(dispatch) => {\r\n    try {\r\n        const {data} = await api.fetchUsers()\r\n        alert(JSON.stringify({data}))\r\n        dispatch({\r\n            type   : FETCH_ALL,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.updatedUser(id, user)\r\n        dispatch({\r\n            type   : UPDATE,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteUser(id)\r\n        dispatch({\r\n            type   : DELETE,\r\n            payload: id\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const changeUserStatus = (id) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.changeUserStatus(id)\r\n\r\n        dispatch({\r\n            type   : UPDATE,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}