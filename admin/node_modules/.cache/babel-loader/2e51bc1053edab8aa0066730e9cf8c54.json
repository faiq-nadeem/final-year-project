{"ast":null,"code":"import { FETCH_ALL_USERS, UPDATE_USER, DELETE_USER } from '../constants/actionTypes';\nimport * as api from '../api';\nimport { loaderStatus } from './loader'; // Action Creators\n\nexport const getUsers = () => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.fetchUsers();\n    dispatch({\n      type: FETCH_ALL_USERS,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const deleteUser = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    await api.deleteUser(id);\n    dispatch({\n      type: DELETE_USER,\n      payload: id\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    console.log(error);\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeUserStatus = id => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeUserStatus(id);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeUserRole = (id, userRole) => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeUserRole(id, userRole);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeUserCategory = (id, userCategory) => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeUserCategory(id, userCategory);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};\nexport const changeUserSubCategory = (id, userSubCategory) => async dispatch => {\n  try {\n    dispatch(loaderStatus(true));\n    const {\n      data\n    } = await api.changeUserSubCategory(id, userSubCategory);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n    dispatch(loaderStatus(false));\n  } catch (error) {\n    dispatch(loaderStatus(false));\n  }\n};","map":{"version":3,"sources":["C:/xampp/htdocs/aaa/admin/src/actions/users.js"],"names":["FETCH_ALL_USERS","UPDATE_USER","DELETE_USER","api","loaderStatus","getUsers","dispatch","data","fetchUsers","type","payload","error","console","log","deleteUser","id","changeUserStatus","changeUserRole","userRole","changeUserCategory","userCategory","changeUserSubCategory","userSubCategory"],"mappings":"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","sourcesContent":["import { FETCH_ALL_USERS, UPDATE_USER, DELETE_USER } from '../constants/actionTypes'\r\nimport * as api from '../api'\r\nimport { loaderStatus } from './loader'\r\n\r\n// Action Creators\r\nexport const getUsers = () => async(dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.fetchUsers()\r\n        dispatch({\r\n            type   : FETCH_ALL_USERS,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        await api.deleteUser(id)\r\n        dispatch({\r\n            type   : DELETE_USER,\r\n            payload: id\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        console.log(error)\r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeUserStatus = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeUserStatus(id)\r\n        dispatch({\r\n            type   : UPDATE_USER,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeUserRole = (id, userRole) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeUserRole(id, userRole)\r\n        dispatch({\r\n            type   : UPDATE_USER,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeUserCategory = (id, userCategory) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeUserCategory(id, userCategory)\r\n        dispatch({\r\n            type   : UPDATE_USER,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}\r\n\r\nexport const changeUserSubCategory = (id, userSubCategory) => async (dispatch) => {\r\n    try {\r\n        dispatch(loaderStatus(true))\r\n        const {data} = await api.changeUserSubCategory(id, userSubCategory)\r\n        dispatch({\r\n            type   : UPDATE_USER,\r\n            payload: data\r\n        })\r\n        dispatch(loaderStatus(false))\r\n    } catch (error) {\r\n        \r\n        dispatch(loaderStatus(false))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}